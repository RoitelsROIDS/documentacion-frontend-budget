"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[8382],{3905:(e,a,n)=>{n.d(a,{Zo:()=>d,kt:()=>g});var t=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function s(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?s(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},s=Object.keys(e);for(t=0;t<s.length;t++)n=s[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)n=s[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=t.createContext({}),l=function(e){var a=t.useContext(c),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},d=function(e){var a=l(e.components);return t.createElement(c.Provider,{value:a},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=l(n),m=r,g=u["".concat(c,".").concat(m)]||u[m]||p[m]||s;return n?t.createElement(g,o(o({ref:a},d),{},{components:n})):t.createElement(g,o({ref:a},d))}));function g(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=m;var i={};for(var c in a)hasOwnProperty.call(a,c)&&(i[c]=a[c]);i.originalType=e,i[u]="string"==typeof e?e:r,o[1]=i;for(var l=2;l<s;l++)o[l]=n[l];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8488:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var t=n(7462),r=(n(7294),n(3905));const s={sidebar_position:7},o="Traducciones",i={unversionedId:"React-intl",id:"React-intl",title:"Traducciones",description:"La traducci\xf3n de espa\xf1ol/ingles de la aplicaci\xf3n se realiza con react-intl, la cual es una biblioteca que facilita la internacionalizaci\xf3n de aplicaciones de React, permitiendo la traducci\xf3n de texto, el formateo de n\xfameros y fechas, y el manejo de formatos de texto complejos. Ayuda a crear aplicaciones multiling\xfces y adaptables a diferentes culturas y regiones.",source:"@site/docs/React-intl.mdx",sourceDirName:".",slug:"/React-intl",permalink:"/documentacion-frontend-budget/docs/React-intl",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Firebase Authentication",permalink:"/documentacion-frontend-budget/docs/Servicios/firebase"},next:{title:"Custom hooks",permalink:"/documentacion-frontend-budget/docs/Custom-Hooks"}},c={},l=[{value:"Scripts utilizados para el manejo de traducciones",id:"scripts-utilizados-para-el-manejo-de-traducciones",level:2},{value:"Pasos para agregar nuevas traducciones desde el c\xf3digo",id:"pasos-para-agregar-nuevas-traducciones-desde-el-c\xf3digo",level:2}],d={toc:l},u="wrapper";function p(e){let{components:a,...n}=e;return(0,r.kt)(u,(0,t.Z)({},d,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"traducciones"},"Traducciones"),(0,r.kt)("p",null,"La traducci\xf3n de espa\xf1ol/ingles de la aplicaci\xf3n se realiza con ",(0,r.kt)("inlineCode",{parentName:"p"},"react-intl"),', la cual es una biblioteca que facilita la internacionalizaci\xf3n de aplicaciones de React, permitiendo la traducci\xf3n de texto, el formateo de n\xfameros y fechas, y el manejo de formatos de texto complejos. Ayuda a crear aplicaciones multiling\xfces y adaptables a diferentes culturas y regiones.\nEl c\xf3digo de la aplicaci\xf3n RoiBi cuenta con dos carpetas "Lang". Una se encuentra en el directorio ra\xedz (la cual se encarga de almacenar los archivos .json con las traducciones que obtiene la app cuando carga a trav\xe9s de un scrip un archivo excel con todas las traducciones almacenadas) y la otra se encuentra alojada dentro de la carpeta "src" (la cual toma los mensajes predefinidos en la carpeta "lang" del directorio ra\xedz y los implementa dentro de la app).'),(0,r.kt)("h2",{id:"scripts-utilizados-para-el-manejo-de-traducciones"},"Scripts utilizados para el manejo de traducciones"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"yarn compile-messages:"),' Este script compila los mensajes de la carpeta "lang" y los copia en la carpeta "src". Los mensajes son definidos en archivos de idioma (por ejemplo, es.json, en.json) en la carpeta "lang". El script se encarga de generar archivos JavaScript que contienen los mensajes traducidos y los coloca en la carpeta "src". Estos mensajes compilados se utilizan durante la ejecuci\xf3n de la aplicaci\xf3n con el comando yarn start.')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"yarn locale:new-keys:"),' Este script busca en el c\xf3digo las definiciones de mensajes utilizando la funci\xf3n defineMessages de react-intl. Luego, compara las claves de mensajes encontradas en el c\xf3digo con las claves existentes en los archivos de idioma en la carpeta "lang". Si encuentra nuevas claves en el c\xf3digo que no est\xe1n presentes en los archivos de idioma, las agrega autom\xe1ticamente al archivo "keys.json". Este archivo mantiene un registro de las claves de mensajes utilizadas en la aplicaci\xf3n.')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"yarn locale:load-xls:"),' Este script carga el archivo de Excel "tradus.xlsx" ubicado en la carpeta "scripts". El archivo de Excel debe tener un formato de columnas con las siguientes cabeceras: ',"[id, es, en]",'. Cada fila representa una traducci\xf3n, donde "id" es la clave del mensaje, "es" es la traducci\xf3n en espa\xf1ol y "en" es la traducci\xf3n en ingl\xe9s. El script se encarga de leer este archivo y actualizar autom\xe1ticamente los archivos de idioma correspondientes en la carpeta "lang" con las traducciones proporcionadas en el archivo de Excel.'))),(0,r.kt)("h2",{id:"pasos-para-agregar-nuevas-traducciones-desde-el-c\xf3digo"},"Pasos para agregar nuevas traducciones desde el c\xf3digo"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Dentro del c\xf3digo de la aplicaci\xf3n, se utiliza la funci\xf3n ",(0,r.kt)("inlineCode",{parentName:"li"},"defineMessages")," de react-intl para definir nuevos mensajes a ser traducidos. En primera instancia se agrega un nuevo ",(0,r.kt)("inlineCode",{parentName:"li"},"defineMessages")," desde el archivo ",(0,r.kt)("strong",{parentName:"li"},"Messages.ts"),' ubicado en la carpeta "lang" dentro de "src" (el nuevo mensaje deber\xe1 tener un c\xf3digo de identificaci\xf3n, un id y un mensaje predeterminado).')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="/src/lang/Messages.ts"',title:'"/src/lang/Messages.ts"'},"import { defineMessages } from 'react-intl'\n\n// en este ejemplo el se puede ver el codigo de identificaci\xf3n (currentMonth), el id (id: 'currentMonth') y el mensaje predeterminado (defaultMessage: 'Current Month')\n\nexport const BudgetMessages = defineMessages({\n    currentMonth: { id: 'currentMonth', defaultMessage: 'Current Month' },\n    // si se desea agregar una nueva traducc\xf3n deber\xe1 respetar dicha estructura\n    // Ejemplo de como se deber\xeda agregar una nueva traducci\xf3n => nuevaTraducci\xf3n: { id: 'nuevaTraducci\xf3n', defaultMessage: 'Esta va a ser la nueva traducci\xf3n' },\n})\n\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Ejecutar el script ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"yarn locale:new-keys")),'. Este script buscar\xe1 las nuevas definiciones en *Menssages.ts** y agregar\xe1 las claves de mensajes correspondientes al archivo "keys.json". Esto asegura que las nuevas claves sean registradas y puedan ser traducidas posteriormente.')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn locale:new-keys\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Una vez que las claves de mensajes est\xe1n registradas, se pueden agregar las traducciones correspondientes al archivo de idioma deseado (por ejemplo, es.json). Esto puede hacerse manualmente o utilizando el script ",(0,r.kt)("inlineCode",{parentName:"li"},"yarn locale:load-xls")," para cargar las traducciones desde un archivo de Excel predefinido.\nLuego habr\xe1 que incorporar en el c\xf3digo el traducci\xf3n de la siguiente manera:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="/src/components/screens/BudgetScreen/BudgetScreen.tsx"',title:'"/src/components/screens/BudgetScreen/BudgetScreen.tsx"'},"import { BudgetMessages } from '../../../lang/Messages'\n\nconst { formatMessage } = useIntl()\n\n<div className=\"table\">\n    <CountriesDataTable\n        columnName={formatMessage(BudgetMessages.currentMonth)}\n        // la funci\xf3n formatMessage proporcionada por el hook useIntl se encarga de realizar la traducci\xf3n de mensajes buscando los mensajes dentro de Messages.ts\n    />\n</div>\n")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Despu\xe9s de agregar las traducciones, se puede ejecutar el script ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"yarn compile-messages"))," para compilar los mensajes actualizados y utilizarlos en la aplicaci\xf3n durante la ejecuci\xf3n.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn compile-messages\n")))}p.isMDXComponent=!0}}]);