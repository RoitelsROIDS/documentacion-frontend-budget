"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[1131],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),c=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(i.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(t),m=r,g=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return t?a.createElement(g,s(s({ref:n},p),{},{components:t})):a.createElement(g,s({ref:n},p))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=m;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[u]="string"==typeof e?e:r,s[1]=l;for(var c=2;c<o;c++)s[c]=t[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5480:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=t(7462),r=(t(7294),t(3905));const o={},s="CountryDataTable",l={unversionedId:"Components/Screens/BudgetScreen/CountryDataTable",id:"Components/Screens/BudgetScreen/CountryDataTable",title:"CountryDataTable",description:"El componente CountryDataTable se utiliza para mostrar una tabla de datos con el top 10 de pa\xedses con sus respectivos valores asociados en una columna espec\xedfica (Ingresos u Ocupaci\xf3n). El componente utiliza material ui para los componentes de interfaz de usuario, i18n-iso-countries para la traducci\xf3n de nombres de pa\xedses y c\xf3digos ISO, y react-intl para la traducci\xf3n de nombres de pa\xedses y mensajes.",source:"@site/docs/Components/Screens/BudgetScreen/CountryDataTable.mdx",sourceDirName:"Components/Screens/BudgetScreen",slug:"/Components/Screens/BudgetScreen/CountryDataTable",permalink:"/documentacion-frontend-budget/docs/Components/Screens/BudgetScreen/CountryDataTable",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Components/Screens/BudgetScreen/CountryDataTable.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"BudgetCards",permalink:"/documentacion-frontend-budget/docs/Components/Screens/BudgetScreen/BudgetCards"},next:{title:"FiltersBar",permalink:"/documentacion-frontend-budget/docs/Components/Screens/BudgetScreen/FiltersBar"}},i={},c=[{value:"Importaci\xf3n de dependencias y recursos",id:"importaci\xf3n-de-dependencias-y-recursos",level:2},{value:"L\xf3gica y representaci\xf3n de las tablas",id:"l\xf3gica-y-representaci\xf3n-de-las-tablas",level:2}],p={toc:c},u="wrapper";function d(e){let{components:n,...t}=e;return(0,r.kt)(u,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"countrydatatable"},"CountryDataTable"),(0,r.kt)("p",null,"El componente ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"CountryDataTable"))," se utiliza para mostrar una tabla de datos con el top 10 de pa\xedses con sus respectivos valores asociados en una columna espec\xedfica ",(0,r.kt)("strong",{parentName:"p"},"(Ingresos u Ocupaci\xf3n)"),". El componente utiliza ",(0,r.kt)("strong",{parentName:"p"},"material ui")," para los componentes de interfaz de usuario, ",(0,r.kt)("strong",{parentName:"p"},"i18n-iso-countries")," para la traducci\xf3n de nombres de pa\xedses y c\xf3digos ISO, y ",(0,r.kt)("strong",{parentName:"p"},"react-intl")," para la traducci\xf3n de nombres de pa\xedses y mensajes."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Para editar cualquier estilo del componente ",(0,r.kt)("strong",{parentName:"p"},"CountryDataTable"),", debe realizarse desde el archivo de estilos ",(0,r.kt)("strong",{parentName:"p"},"BudgetScreen.scss"),".")),(0,r.kt)("h2",{id:"importaci\xf3n-de-dependencias-y-recursos"},"Importaci\xf3n de dependencias y recursos"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"El c\xf3digo hace uso de varios componentes de la biblioteca Material-UI. Estos componentes proporcionan la estructura y los estilos necesarios para construir las tablas de Ocupaci\xf3n e Ingresos.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"<Paper> <TableContainer> <Table> <TableHead> <TableBody> <TableRow> <TableCell>\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Se importan los archivos ",(0,r.kt)("strong",{parentName:"li"},"JSON de idioma (en.json y es.json)")," para la traducci\xf3n de nombres de pa\xedses y se registran utilizando ",(0,r.kt)("inlineCode",{parentName:"li"},"registerLocale")," de i18n-iso-countries para habilitar la traducci\xf3n de nombres de pa\xedses en diferentes idiomas.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="/components/screens/BudgetScreen/CountryDataTable.tsx"',title:'"/components/screens/BudgetScreen/CountryDataTable.tsx"'},"import * as i18nIsoCountries from 'i18n-iso-countries'\nimport { getName } from 'i18n-iso-countries'\nimport * as enJson from 'i18n-iso-countries/langs/en.json'\nimport * as esJson from 'i18n-iso-countries/langs/es.json'\n\ni18nIsoCountries.registerLocale(enJson)\ni18nIsoCountries.registerLocale(esJson)\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Se importa el componente ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"InfoPopover"))," que se utiliza para mostrar informaci\xf3n adicional en forma de un popover en la tabla.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="/components/screens/BudgetScreen/CountryDataTable.tsx"',title:'"/components/screens/BudgetScreen/CountryDataTable.tsx"'},"import InfoPopover from '../../screens/BudgetScreen/PopupInfoCharts'\n")),(0,r.kt)("h2",{id:"l\xf3gica-y-representaci\xf3n-de-las-tablas"},"L\xf3gica y representaci\xf3n de las tablas"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Se define el tipo ",(0,r.kt)("inlineCode",{parentName:"li"},"Props")," que especifica la estructura de las propiedades esperadas por el componente, en este caso para las columas con los pa\xedses y las columnas con los datos a mostrar.\nEl tipo ",(0,r.kt)("strong",{parentName:"li"},"Alpha2Code")," se utiliza para representar el c\xf3digo de dos letras de un pa\xeds y garantizar que se cumpla el formato correcto en los datos utilizados por el componente ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"CountriesDataTable")),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="/components/screens/BudgetScreen/CountryDataTable.tsx"',title:'"/components/screens/BudgetScreen/CountryDataTable.tsx"'},"\ntype Props = {\n    data: {\n        country: Alpha2Code\n        value: any\n    }[]\n    columnName: string\n}\n\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Se itera sobre los datos proporcionados ",(0,r.kt)("strong",{parentName:"li"},"(data.slice(0, 10))")," y se crea una fila para cada elemento, limitando la cantidad de filas a 10.\nSe declara dentro del bloque las funciones ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"countryName"))," y ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"countryCode"))," para obtener el nombre del pa\xeds y el c\xf3digo de pa\xeds utilizando las funciones ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"getName"))," y ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"isoToCountryCode"))," respectivamente."),(0,r.kt)("li",{parentName:"ul"},"El bloque ",(0,r.kt)("strong",{parentName:"li"},"try y catch")," se utiliza para manejar posibles errores que puedan ocurrir al obtener el nombre del pa\xeds y el c\xf3digo de pa\xeds a partir del c\xf3digo de dos letras proporcionado (row.country).")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="/components/screens/BudgetScreen/CountryDataTable.tsx"',title:'"/components/screens/BudgetScreen/CountryDataTable.tsx"'},'\n<TableBody>\n    {data.slice(0, 10).map((row) => {\n        let countryName, countryCode\n        try {\n            countryName = getName(row.country, locale, { select: \'official\' })\n            countryCode = isoToCountryCode(row.country)\n        } catch (e) {\n            console.error(`Error getting country name or code for ${row.country}: ${e}`)\n            return null\n        }\n        if (!countryName) return null\n        return (\n            <StyledTableRow\n                key={row.country}\n                sx={{ \'&:last-child td, &:last-child th\': { border: 0 } }}\n                className="country-table-row"\n            >\n                <TableCell colSpan={1} align="left">\n                    <div className="country-table-row-flag">\n                        <img src={require(`flagpack-core/lib/flags/l/${countryCode}.svg`)} />\n                    </div>\n                </TableCell>\n                <TableCell colSpan={2} align="left">\n                    <div className="country-table-row-labels">\n                        <label>{row.country.toUpperCase()}</label>\n                        <span>{countryName}</span>\n                    </div>\n                </TableCell>\n                <TableCell colSpan={1} className="country-table-row-reservations-section" align="right">\n                    <div>{columnName === \'Revenue\' ? `$ ${row.value}` : `${row.value}%`}</div>\n                </TableCell>\n            </StyledTableRow>\n        )\n    })}\n</TableBody>\n\n')))}d.isMDXComponent=!0}}]);