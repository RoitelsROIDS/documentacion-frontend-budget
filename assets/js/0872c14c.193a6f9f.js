"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[9648],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>g});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(t),m=o,g=p["".concat(s,".").concat(m)]||p[m]||u[m]||r;return t?a.createElement(g,i(i({ref:n},d),{},{components:t})):a.createElement(g,i({ref:n},d))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},9179:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var a=t(7462),o=(t(7294),t(3905));const r={sidebar_position:5},i="Contextos",l={unversionedId:"UserContext",id:"UserContext",title:"Contextos",description:"UserContext",source:"@site/docs/UserContext.mdx",sourceDirName:".",slug:"/UserContext",permalink:"/documentacion-frontend-budget/docs/UserContext",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Geo",permalink:"/documentacion-frontend-budget/docs/Constants/geo"},next:{title:"Servicios",permalink:"/documentacion-frontend-budget/docs/category/servicios"}},s={},c=[{value:"UserContext",id:"usercontext",level:2},{value:"Definir propiedades para implementar en el contexto",id:"definir-propiedades-para-implementar-en-el-contexto",level:2},{value:"Implementaci\xf3n global del contexto",id:"implementaci\xf3n-global-del-contexto",level:2}],d={toc:c},p="wrapper";function u(e){let{components:n,...t}=e;return(0,o.kt)(p,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"contextos"},"Contextos"),(0,o.kt)("h2",{id:"usercontext"},"UserContext"),(0,o.kt)("p",null,"El archivo define un contexto llamado ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"UserContext"))," (utilizando la funci\xf3n ",(0,o.kt)("strong",{parentName:"p"},"createContext")," de React) que se utiliza para compartir informaci\xf3n relacionada con el usuario y la configuraci\xf3n en toda la aplicaci\xf3n.\nUn contexto es una forma de compartir y acceder a datos entre componentes, sin la necesidad de pasar props manualmente a trav\xe9s de cada nivel de la jerarqu\xeda de componentes.\nEn este caso ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"UserContext"))," proporciona valores predeterminados que pueden ser accedidas y modificadas por los componentes que consumen este contexto."),(0,o.kt)("h2",{id:"definir-propiedades-para-implementar-en-el-contexto"},"Definir propiedades para implementar en el contexto"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"<user> <userLoading> <backendServices> <locale> <setLocale> <loading> y <setLoading>\n")),(0,o.kt)("p",null,"Estas son las ",(0,o.kt)("strong",{parentName:"p"},"propiedades")," definidas en el objeto con un valor predeterminado en el contexto. Cada propiedad representa un valor relacionado con el usuario y la configuraci\xf3n de la aplicaci\xf3n."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"user:")," Representa la informaci\xf3n del usuario actualmente autenticado."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"userLoading:")," Indica si la informaci\xf3n del usuario est\xe1 cargando o no."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"backendServices:")," Representa los servicios backend utilizados en la aplicaci\xf3n."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"locale:")," Representa el idioma actual de la aplicaci\xf3n."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"setLocale:")," Una funci\xf3n que se utiliza para cambiar el idioma de la aplicaci\xf3n."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"loading:")," Indica si la aplicaci\xf3n est\xe1 cargando o no."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"setLoading:")," Una funci\xf3n que se utiliza para cambiar el estado de carga de la aplicaci\xf3n.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="/src/contexts/UserContext.tsx"',title:'"/src/contexts/UserContext.tsx"'},"import { createContext } from 'react'\nimport BackendServices from '../services/BackendServices'\n\nconst UserContext = createContext<{\n    user: UserInfo | undefined\n    userLoading: boolean\n    backendServices?: BackendServices\n    locale: 'en' | 'es'\n    setLocale: (locale: 'en' | 'es') => void\n    loading: boolean\n    setLoading: (loading: boolean) => void\n}>({\n    user: undefined,\n    userLoading: true,\n    backendServices: undefined,\n    locale: 'en',\n    setLocale: (locale) => {\n        console.log(`Cambio de locale a ${locale}`)\n    },\n    loading: false,\n    setLoading: (loading) => {\n      console.log(`Cambio de locale a ${loading}`)\n    },\n})\n\nexport default UserContext\n\n")),(0,o.kt)("h2",{id:"implementaci\xf3n-global-del-contexto"},"Implementaci\xf3n global del contexto"),(0,o.kt)("p",null,"Se importa el ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"UserContext"))," y se engloba toda la aplicaci\xf3n. Al envolver los componentes con ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"UserContext.Provider")),", se asegura de que los componentes hijos puedan acceder a las ",(0,o.kt)("strong",{parentName:"p"},"propiedades")," del contexto ",(0,o.kt)("strong",{parentName:"p"},"UserContext")," para obtener los valores requeridos.\nEl ",(0,o.kt)("strong",{parentName:"p"},".Provider")," es una propiedad especial de los componentes de contexto en React que se utiliza para definir el alcance del contexto y proporcionar los valores del contexto a los componentes hijos. Es el encargado de propagar los datos del contexto a trav\xe9s del \xe1rbol de componentes."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="/src/app.tsx"',title:'"/src/app.tsx"'},'import UserContext from \'./contexts/UserContext\'\n\n<IntlProvider locale={locale} messages={loadLocaleData(locale)}>\n    // Implementaci\xf3n global del contexto\n    <UserContext.Provider value={{ user: userInfo, userLoading, backendServices, locale, setLocale, loading, setLoading }}>\n        <BrowserRouter>\n            <NavigationContainer>\n                <Routes>\n                    <Route path="/" element={<PrivateRoute element={<BudgetScreen userInfo={userInfo} />} />} />\n                    <Route path="login" element={<LoginScreen />} />\n                </Routes>\n            </NavigationContainer>\n        </BrowserRouter>\n    </UserContext.Provider>\n</IntlProvider>\n\n')))}u.isMDXComponent=!0}}]);