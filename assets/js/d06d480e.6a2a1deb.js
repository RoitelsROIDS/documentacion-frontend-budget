"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[4760],{3905:(e,n,a)=>{a.d(n,{Zo:()=>p,kt:()=>g});var t=a(7294);function o(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function s(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){o(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=t.createContext({}),c=function(e){var n=t.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):s(s({},n),e)),a},p=function(e){var n=c(e.components);return t.createElement(l.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(a),m=o,g=d["".concat(l,".").concat(m)]||d[m]||u[m]||r;return a?t.createElement(g,s(s({ref:n},p),{},{components:a})):t.createElement(g,s({ref:n},p))}));function g(e,n){var a=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=a.length,s=new Array(r);s[0]=m;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[d]="string"==typeof e?e:o,s[1]=i;for(var c=2;c<r;c++)s[c]=a[c];return t.createElement.apply(null,s)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},7128:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var t=a(7462),o=(a(7294),a(3905));const r={},s="RoiBarChart",i={unversionedId:"Components/Commons/RoiBarChart",id:"Components/Commons/RoiBarChart",title:"RoiBarChart",description:'El componente "RoiBarChart" se utiliza para renderizar gr\xe1ficos de barras. El componente se basa en las bibliotecas Chart.js y react-chartjs-2 para generar y visualizar los gr\xe1ficos.',source:"@site/docs/Components/Commons/RoiBarChart.mdx",sourceDirName:"Components/Commons",slug:"/Components/Commons/RoiBarChart",permalink:"/documentacion-frontend-budget/docs/Components/Commons/RoiBarChart",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Private Route",permalink:"/documentacion-frontend-budget/docs/Components/Commons/PrivateRoute"},next:{title:"NavigationContainer",permalink:"/documentacion-frontend-budget/docs/Components/Navigation/NavigationContainer"}},l={},c=[{value:"Opciones y configuraci\xf3n de los gr\xe1ficos",id:"opciones-y-configuraci\xf3n-de-los-gr\xe1ficos",level:2},{value:"Se definen las opciones generales para todos los gr\xe1ficos",id:"se-definen-las-opciones-generales-para-todos-los-gr\xe1ficos",level:3},{value:"Luego se definen las opciones para los gr\xe1ficos horizontales y verticales",id:"luego-se-definen-las-opciones-para-los-gr\xe1ficos-horizontales-y-verticales",level:3},{value:"Estructura de los gr\xe1ficos",id:"estructura-de-los-gr\xe1ficos",level:2}],p={toc:c},d="wrapper";function u(e){let{components:n,...a}=e;return(0,o.kt)(d,(0,t.Z)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"roibarchart"},"RoiBarChart"),(0,o.kt)("p",null,"El componente ",(0,o.kt)("strong",{parentName:"p"},'"RoiBarChart"')," se utiliza para renderizar gr\xe1ficos de barras. El componente se basa en las bibliotecas ",(0,o.kt)("strong",{parentName:"p"},"Chart.js y react-chartjs-2")," para generar y visualizar los gr\xe1ficos.\nEl prop\xf3sito principal de este c\xf3digo es representar visualmente datos estad\xedsticos en forma de gr\xe1ficos de barras, lo que permite al usuario comprender y analizar los datos de manera m\xe1s intuitiva."),(0,o.kt)("h2",{id:"opciones-y-configuraci\xf3n-de-los-gr\xe1ficos"},"Opciones y configuraci\xf3n de los gr\xe1ficos"),(0,o.kt)("p",null,"Se definen diferentes opciones para los gr\xe1ficos de barras verticales y horizontales, que incluyen configuraciones globales o configuraciones espec\xedficas como el aspecto responsive, el tama\xf1o de las barras, los plugins para etiquetas de datos, los ejes, las leyendas y las animaciones.\nAdem\xe1s, se utilizan los datos proporcionados a trav\xe9s de las ",(0,o.kt)("inlineCode",{parentName:"p"},"props graphData"),", que incluyen las etiquetas de los ejes x e y, as\xed como los conjuntos de datos que contienen los valores de las barras, los colores de borde y los colores de fondo."),(0,o.kt)("h3",{id:"se-definen-las-opciones-generales-para-todos-los-gr\xe1ficos"},"Se definen las opciones generales para todos los gr\xe1ficos"),(0,o.kt)("p",null,"Las opciones van a determinar si los graficos deben ser ",(0,o.kt)("strong",{parentName:"p"},"responsives"),", el ",(0,o.kt)("strong",{parentName:"p"},"aspect-ratio")," de los mismos en relaci\xf3n a los diferentes tipos de pantallas, y los ",(0,o.kt)("strong",{parentName:"p"},"plugins")," que sirven para agregar funciones y detalles de dise\xf1o."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="/components/commons/RoiBarChart/RoiBarChart.tsx"',title:'"/components/commons/RoiBarChart/RoiBarChart.tsx"'},"const commonOptions: ChartOptions<'bar'> = {\n    responsive: true,\n    maintainAspectRatio: true,\n    aspectRatio: isBigScreen ? 2.2 : 1.5,\n    plugins: {\n        legend: {\n            display: false,\n        },\n        title: {\n            display: false,\n            text: '',\n        },\n        tooltip: {\n            enabled: false,\n        },\n        datalabels: {\n            anchor: 'end',\n            display: true,\n            color: (ctx: Context) => {\n                const value = ctx.dataset.data[ctx.dataIndex]\n                const maxValue = Math.max(...(ctx.dataset.data as number[]))\n                return value && (value as number) / maxValue > 0.5\n                    ? ('white' as const)\n                    : (ctx.dataset.backgroundColor?.[ctx.dataIndex as keyof typeof ctx.dataset.backgroundColor] as unknown as string) || 'white'\n            },\n            formatter: (value: number, context: { dataset: { label?: string } }) => {\n                const {\n                    dataset: { label },\n                    } = context;\n                    if (value === 0) {\n                    return '';\n                    }\n                    return label === 'type1' ? '$' + value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') : '';\n            },\n        },\n    },\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    hover: false,\n}\n")),(0,o.kt)("h3",{id:"luego-se-definen-las-opciones-para-los-gr\xe1ficos-horizontales-y-verticales"},"Luego se definen las opciones para los gr\xe1ficos horizontales y verticales"),(0,o.kt)("p",null,"Utilizando las ",(0,o.kt)("strong",{parentName:"p"},"commonOptions")," establecidas previamente, se generan las opciones para diferenciar que tipo de gr\xe1fico va a estar renderizando la aplicaci\xf3n, basado en las metricas correspondiente (los g\xe1ficos con barras horizontales para Revenue, ADR y RevPar; mientras que las barras verticales para Occupancy)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="/components/commons/RoiBarChart/RoiBarChart.tsx"',title:'"/components/commons/RoiBarChart/RoiBarChart.tsx"'},"const verticalOptions: ChartOptions<'bar'> = {\n    ...commonOptions,\n    indexAxis: 'x' as const,\n    barThickness: isBigScreen ? 50 :'flex',\n    plugins: {\n        ...occupancyOptions.plugins,\n        datalabels: {\n            ...occupancyOptions.plugins?.datalabels,\n            align: (ctx: Context) => {\n                const value = ctx.dataset.data[ctx.dataIndex]\n                const maxValue = Math.max(...(ctx.dataset.data as number[]))\n                return value && (value as number) / maxValue > 0.5 ? ('bottom' as const) : ('top' as const)\n            },\n        },\n    },\n\n    scales: {\n    },\n}\n\nconst horizontalOptions: ChartOptions<'bar'> = {\n    ...commonOptions,\n    barThickness: isBigScreen ? 25 :'flex',\n    indexAxis: 'y' as const,\n\n    plugins: {\n        ...commonOptions.plugins,\n        datalabels: {\n            ...commonOptions.plugins?.datalabels,\n            align: (ctx: Context) => {\n                const value = ctx.dataset.data[ctx.dataIndex]\n                const maxValue = Math.max(...(ctx.dataset.data as number[]))\n                return value && (value as number) / maxValue > 0.5 ? ('left' as const) : ('right' as const)\n            },\n        },\n    },\n\n    scales: {\n    },\n}\n")),(0,o.kt)("h2",{id:"estructura-de-los-gr\xe1ficos"},"Estructura de los gr\xe1ficos"),(0,o.kt)("p",null,"La estructura en la que se construyen los gr\xe1ficos esta construida con componentes  ",(0,o.kt)("inlineCode",{parentName:"p"},"<Card>")," y ",(0,o.kt)("inlineCode",{parentName:"p"},"<CardContent>")," de Material UI, y ",(0,o.kt)("inlineCode",{parentName:"p"},"<Bar>")," de React-chartjs-2.\nEl componente ",(0,o.kt)("inlineCode",{parentName:"p"},"<Bar>")," va a recibir como ",(0,o.kt)("strong",{parentName:"p"},"options")," a las ",(0,o.kt)("inlineCode",{parentName:"p"},"verticalOptions")," o ",(0,o.kt)("inlineCode",{parentName:"p"},"horizontalOptions")," dependiendo de que gr\xe1fico busque renderizarse."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="/components/commons/RoiBarChart/RoiBarChart.tsx"',title:'"/components/commons/RoiBarChart/RoiBarChart.tsx"'},'type Props = {\n    graphData: {\n        labels: string[]\n        datasets: {\n            label: string\n            data: number[]\n            borderColor: string[]\n            backgroundColor: string[]\n        }[]\n    }\n    title: string\n    vertical?: boolean\n}\n\nconst RoiBarChart: FC<Props> = (props) => {\n    const { graphData, title, vertical } = props\n    const graphWithStyles: ChartData<\'bar\', number[], string> = {\n        ...graphData,\n        datasets: graphData.datasets.map((dataset, index) => ({\n            ...dataset,\n            borderRadius: 5,\n            animation: index === 0 ? animationActiveOption : false,\n        })),\n    }\n    const {isUpXl: isBigScreen } = useScreenBrakpoints()\n\n    const commonOptions: ChartOptions<\'bar\'> = {}\n\n    const verticalOptions: ChartOptions<\'bar\'> = {}\n\n    const horizontalOptions: ChartOptions<\'bar\'> = {}\n\n    return (\n        <div className="card">\n            <Card>\n                <CardContent className="card-content">\n                    <div className="title-and-info-popup">\n                        <Typography variant="h5">{title}</Typography>\n                    </div>\n                    <Bar\n                        options={vertical ? verticalOptions : horizontalOptions}\n                        data={graphWithStyles}\n                        updateMode="normal"\n                        plugins={[ChartDataLabels]}\n                    />\n                </CardContent>\n            </Card>\n        </div>\n    )\n}\n')))}u.isMDXComponent=!0}}]);