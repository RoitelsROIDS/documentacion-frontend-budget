"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[6691],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,g=p["".concat(u,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(g,i(i({ref:t},l),{},{components:n})):r.createElement(g,i({ref:t},l))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5449:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const o={},i="Private Route",s={unversionedId:"Components/Commons/PrivateRoute",id:"Components/Commons/PrivateRoute",title:"Private Route",description:'El componente llamado "PrivateRoute" es el controlar el acceso a rutas privadas dentro de la aplicaci\xf3n. La finalidad de este c\xf3digo es asegurar que el usuario est\xe9 autenticado antes de permitirle acceder a una ruta privada para acceder a Budgets.',source:"@site/docs/Components/Commons/PrivateRoute.mdx",sourceDirName:"Components/Commons",slug:"/Components/Commons/PrivateRoute",permalink:"/documentacion-frontend-budget/docs/Components/Commons/PrivateRoute",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Components/Commons/PrivateRoute.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Componentes",permalink:"/documentacion-frontend-budget/docs/category/componentes"},next:{title:"RoiBarChart",permalink:"/documentacion-frontend-budget/docs/Components/Commons/RoiBarChart"}},u={},c=[{value:"Autenticaci\xf3n",id:"autenticaci\xf3n",level:2},{value:"Import PrivateRoute",id:"import-privateroute",level:2}],l={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"private-route"},"Private Route"),(0,a.kt)("p",null,"El componente llamado ",(0,a.kt)("strong",{parentName:"p"},'"PrivateRoute"')," es el controlar el acceso a rutas privadas dentro de la aplicaci\xf3n. La finalidad de este c\xf3digo es asegurar que el usuario est\xe9 autenticado antes de permitirle acceder a una ruta privada para acceder a Budgets."),(0,a.kt)("h2",{id:"autenticaci\xf3n"},"Autenticaci\xf3n"),(0,a.kt)("p",null,"Si el usuario no est\xe1 autenticado, se utiliza la funci\xf3n ",(0,a.kt)("strong",{parentName:"p"},'"navigate" de react-router-dom')," para redirigir al usuario a la p\xe1gina de inicio de sesi\xf3n ",(0,a.kt)("strong",{parentName:"p"},'("/login")'),". Si el usuario est\xe1 autenticado podra acceder a la pantalla principal de Budget.\nEsto se logra utilizando el hook ",(0,a.kt)("inlineCode",{parentName:"p"},"useContext")," para acceder al contexto de usuario (UserContext) y obtener el estado del usuario y userLoading. Luego el hook ",(0,a.kt)("inlineCode",{parentName:"p"},"useNavigate")," se utiliza para obtener la funci\xf3n de navegaci\xf3n para redirigir al usuario a una ruta espec\xedfica. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="/src/components/commons/PrivateRoute.tsx"',title:'"/src/components/commons/PrivateRoute.tsx"'},"type Props = {\n    element: JSX.Element\n}\n\nconst PrivateRoute: FC<Props> = (props) => {\n    const { element } = props\n    const navigate = useNavigate()\n    const { userLoading, user } = useContext(UserContext)\n\n    if (userLoading) return null\n    if (!user) {\n        navigate('/login')\n    }\n\n    return element\n}\n")),(0,a.kt)("h2",{id:"import-privateroute"},"Import PrivateRoute"),(0,a.kt)("p",null,"El componente debe ser importado e implementado en la Route correspondiente donde hay que validar si existe el usuario o no. En este caso: ",(0,a.kt)("inlineCode",{parentName:"p"},"element={<PrivateRoute element={<BudgetScreen userInfo={userInfo} />} />}")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="/src/App.tsx"',title:'"/src/App.tsx"'},'return (\n    <>\n        <CssBaseline />\n        <IntlProvider locale={locale} messages={loadLocaleData(locale)}>\n            <UserContext.Provider value={{ user: userInfo, userLoading, backendServices, locale, setLocale, loading, setLoading }}>\n                <BrowserRouter>\n                    <NavigationContainer>\n                        <Routes>\n                            <Route path="/" element={<PrivateRoute element={<BudgetScreen userInfo={userInfo} />} />} />\n                            <Route path="login" element={<LoginScreen />} />\n                        </Routes>\n                    </NavigationContainer>\n                </BrowserRouter>\n            </UserContext.Provider>\n        </IntlProvider>\n    </>\n)\n')))}d.isMDXComponent=!0}}]);