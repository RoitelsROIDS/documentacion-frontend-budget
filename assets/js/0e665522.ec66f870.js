"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[8958],{3905:(e,n,a)=>{a.d(n,{Zo:()=>u,kt:()=>v});var t=a(7294);function o(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){o(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function s(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var c=t.createContext({}),l=function(e){var n=t.useContext(c),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},u=function(e){var n=l(e.components);return t.createElement(c.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,o=e.mdxType,r=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(a),m=o,v=p["".concat(c,".").concat(m)]||p[m]||d[m]||r;return a?t.createElement(v,i(i({ref:n},u),{},{components:a})):t.createElement(v,i({ref:n},u))}));function v(e,n){var a=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<r;l++)i[l]=a[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},70:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var t=a(7462),o=(a(7294),a(3905));const r={sidebar_position:9},i="Entry Point - App.tsx",s={unversionedId:"Entry-point",id:"Entry-point",title:"Entry Point - App.tsx",description:"El archivo app.tsx muestra la estructura b\xe1sica de la aplicaci\xf3n construida con React, la cual utiliza diversas bibliotecas y componentes para implementar funcionalidades como autenticaci\xf3n de usuarios, enrutamiento, protecci\xf3n de rutas, internacionalizaci\xf3n y m\xe1s. Cada parte del c\xf3digo cumple un prop\xf3sito espec\xedfico para lograr la funcionalidad deseada en la aplicaci\xf3n.",source:"@site/docs/Entry-point.mdx",sourceDirName:".",slug:"/Entry-point",permalink:"/documentacion-frontend-budget/docs/Entry-point",draft:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Custom hooks",permalink:"/documentacion-frontend-budget/docs/Custom-Hooks"}},c={},l=[{value:"Componente App",id:"componente-app",level:2},{value:"CssBaseline",id:"cssbaseline",level:3},{value:"Internacionalizaci\xf3n (IntlProvider)",id:"internacionalizaci\xf3n-intlprovider",level:3},{value:"Contexto de usuario (UserContext)",id:"contexto-de-usuario-usercontext",level:3},{value:"Componente NavigationContainer",id:"componente-navigationcontainer",level:3},{value:"Componentes de pantalla y enrutamiento",id:"componentes-de-pantalla-y-enrutamiento",level:3},{value:"Componente PrivateRoute",id:"componente-privateroute",level:3},{value:"Hook useEffect para cerrar sesi\xf3n por inactividad",id:"hook-useeffect-para-cerrar-sesi\xf3n-por-inactividad",level:2},{value:"Hook useEffect para obtener informaci\xf3n del usuario",id:"hook-useeffect-para-obtener-informaci\xf3n-del-usuario",level:2}],u={toc:l},p="wrapper";function d(e){let{components:n,...a}=e;return(0,o.kt)(p,(0,t.Z)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"entry-point---apptsx"},"Entry Point - App.tsx"),(0,o.kt)("p",null,"El archivo ",(0,o.kt)("strong",{parentName:"p"},"app.tsx")," muestra la estructura b\xe1sica de la aplicaci\xf3n construida con React, la cual utiliza diversas bibliotecas y componentes para implementar funcionalidades como autenticaci\xf3n de usuarios, enrutamiento, protecci\xf3n de rutas, internacionalizaci\xf3n y m\xe1s. Cada parte del c\xf3digo cumple un prop\xf3sito espec\xedfico para lograr la funcionalidad deseada en la aplicaci\xf3n.\nAl entender la estructura y la funcionalidad de las diferentes partes, se puede trabajar en el desarrollo y mantenimiento de la aplicaci\xf3n de manera m\xe1s efectiva."),(0,o.kt)("h2",{id:"componente-app"},"Componente App"),(0,o.kt)("p",null,"El componente ",(0,o.kt)("strong",{parentName:"p"},"App")," es el componente principal de la aplicaci\xf3n. Contiene el enrutamiento de las diferentes pantallas y proporciona el contexto de usuario a trav\xe9s del componente ",(0,o.kt)("strong",{parentName:"p"},"UserContext.Provider"),". Tambi\xe9n se encarga de cargar los archivos de idioma y configurar el proveedor de internacionalizaci\xf3n ",(0,o.kt)("strong",{parentName:"p"},"(IntlProvider)")," para admitir la traducci\xf3n de la interfaz de usuario."),(0,o.kt)("h3",{id:"cssbaseline"},"CssBaseline"),(0,o.kt)("p",null,"El componente ",(0,o.kt)("strong",{parentName:"p"},"CssBaseline")," es parte del conjunto de componentes proporcionados por Material-UI, el cual se utiliza para establecer un conjunto b\xe1sico de estilos CSS en la aplicaci\xf3n y normalizar el aspecto visual en diferentes navegadores."),(0,o.kt)("h3",{id:"internacionalizaci\xf3n-intlprovider"},"Internacionalizaci\xf3n (IntlProvider)"),(0,o.kt)("p",null,"El componente ",(0,o.kt)("strong",{parentName:"p"},"IntlProvider")," se utiliza para admitir la internacionalizaci\xf3n de la aplicaci\xf3n. Se configura con el idioma actual y los mensajes de traducci\xf3n correspondientes cargados desde archivos ",(0,o.kt)("strong",{parentName:"p"},"JSON (en.json y es.json)"),". Esto permite que los componentes utilicen las funciones de formateo y traducci\xf3n proporcionadas por la biblioteca ",(0,o.kt)("strong",{parentName:"p"},"react-intl")," para mostrar el contenido en el idioma seleccionado."),(0,o.kt)("h3",{id:"contexto-de-usuario-usercontext"},"Contexto de usuario (UserContext)"),(0,o.kt)("p",null,"El contexto de usuario ",(0,o.kt)("strong",{parentName:"p"},"(UserContext)")," se define en el archivo ",(0,o.kt)("strong",{parentName:"p"},"UserContext.tsx")," y se exporta junto con el componente App. Este contexto proporciona informaci\xf3n relacionada con el usuario, como los detalles del usuario autenticado, el estado de carga del usuario, el servicio BackendServices, el idioma actual, etc. Este contexto se utiliza en diferentes componentes de la aplicaci\xf3n para acceder a la informaci\xf3n del usuario de manera sencilla."),(0,o.kt)("h3",{id:"componente-navigationcontainer"},"Componente NavigationContainer"),(0,o.kt)("p",null,"El componente ",(0,o.kt)("strong",{parentName:"p"},"NavigationContainer")," es un componente envolvente que proporciona una estructura de navegaci\xf3n com\xfan para todas las pantallas. Es responsable de mostrar una barra de navegaci\xf3n o men\xfa para que el usuario pueda navegar entre las diferentes pantallas de la aplicaci\xf3n."),(0,o.kt)("h3",{id:"componentes-de-pantalla-y-enrutamiento"},"Componentes de pantalla y enrutamiento"),(0,o.kt)("p",null,"El componente App define diferentes rutas utilizando el enrutador de React ",(0,o.kt)("strong",{parentName:"p"},"(BrowserRouter y Routes)")," para cada pantalla de la aplicaci\xf3n. Algunas de las pantallas mencionadas incluyen ",(0,o.kt)("strong",{parentName:"p"},"BudgetScreen y LoginScreen"),". Cada ruta se mapea a un componente de pantalla correspondiente que se renderiza cuando se accede a esa ruta en la aplicaci\xf3n."),(0,o.kt)("h3",{id:"componente-privateroute"},"Componente PrivateRoute"),(0,o.kt)("p",null,"El componente ",(0,o.kt)("strong",{parentName:"p"},"PrivateRoute")," es un componente personalizado que se utiliza para proteger las rutas y garantizar que solo los usuarios autenticados tengan acceso a ciertas pantallas. Este componente envuelve las rutas que requieren autenticaci\xf3n y redirige al usuario a la pantalla de inicio de sesi\xf3n si no est\xe1 autenticado."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="/src/app.tsx"',title:'"/src/app.tsx"'},'const App = () => {\n\n    return (\n        <>\n            <CssBaseline />\n            <IntlProvider locale={locale} messages={loadLocaleData(locale)}>\n                <UserContext.Provider value={{ user: userInfo, userLoading, backendServices, locale, setLocale, loading, setLoading }}>\n                    <BrowserRouter>\n                        <NavigationContainer>\n                            <Routes>\n                                <Route path="/" element={<PrivateRoute element={<BudgetScreen userInfo={userInfo} />} />} />\n                                <Route path="login" element={<LoginScreen />} />\n                            </Routes>\n                        </NavigationContainer>\n                    </BrowserRouter>\n                </UserContext.Provider>\n            </IntlProvider>\n        </>\n    )\n}\nexport default App\n\n')),(0,o.kt)("h2",{id:"hook-useeffect-para-cerrar-sesi\xf3n-por-inactividad"},"Hook useEffect para cerrar sesi\xf3n por inactividad"),(0,o.kt)("p",null,"Dentro del componente App, se utiliza un hook ",(0,o.kt)("strong",{parentName:"p"},"useEffect(checkInactivity)")," para agregar un temporizador que cierra la sesi\xf3n del usuario despu\xe9s de 30 minutos de inactividad. Esto se logra mediante el seguimiento del tiempo de la \xfaltima actividad del usuario y verificando si ha pasado el tiempo de inactividad especificado. En caso de inactividad, se cierra la sesi\xf3n del usuario utilizando el servicio ",(0,o.kt)("strong",{parentName:"p"},"auth de Firebase")," y se recarga la p\xe1gina."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="/src/app.tsx"',title:'"/src/app.tsx"'},"useEffect(() => {\n    const checkInactivity = () => {\n        const currentTime = Date.now();\n        const timeSinceLastActivity = currentTime - lastActivity;\n        if (timeSinceLastActivity >= 30 * 60 * 1000) {\n        console.log('No activity in the last 30 minutes, logging out user');\n        auth.signOut().then(() => {\n            window.location.reload()\n            console.log('User logged out');\n        }).catch((error) => {\n            console.log(error.message);\n        });\n        }\n    };\n    \n    const resetTimer = () => {\n        setLastActivity(Date.now());\n    };\n    \n    // document.addEventListener('mousemove', resetTimer);\n    document.addEventListener('keydown', resetTimer);\n    // document.addEventListener('scroll', resetTimer);\n    \n    const timer = setInterval(checkInactivity, 1800000);\n    \n    return () => {\n        clearInterval(timer);\n        document.removeEventListener('mousemove', resetTimer);\n        document.removeEventListener('keydown', resetTimer);\n        document.removeEventListener('scroll', resetTimer);\n    };\n}, [auth, lastActivity]);\n\n")),(0,o.kt)("h2",{id:"hook-useeffect-para-obtener-informaci\xf3n-del-usuario"},"Hook useEffect para obtener informaci\xf3n del usuario"),(0,o.kt)("p",null,"Hook useEffect que se utiliza para obtener informaci\xf3n del usuario actualmente autenticado. Se suscribe al evento ",(0,o.kt)("strong",{parentName:"p"},"onAuthStateChanged")," del servicio auth de Firebase para recibir actualizaciones cuando el estado de autenticaci\xf3n cambia. Dentro de este hook, se obtiene el token de autenticaci\xf3n del usuario y se utiliza para inicializar el servicio ",(0,o.kt)("strong",{parentName:"p"},"BackendServices"),". Luego, se obtiene la informaci\xf3n adicional del usuario y se actualiza el estado de userInfo. Tambi\xe9n se establece el idioma seg\xfan la configuraci\xf3n actual."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="/src/app.tsx"',title:'"/src/app.tsx"'},"useEffect(() => {\n    console.log('init')\n    console.log('retrieving user')\n    const unsubscribeCallback = auth.onAuthStateChanged((user) => {\n        console.log(user)\n        if (!user) {\n            console.log('no user')\n            setUserLoading(false)\n            return\n        }\n        console.log('starting back connection')\n        user?.getIdToken().then((token) => {\n            const backServices = new BackendServices(token)\n            setBackendServices(backServices)\n            console.log('retrieving user info')\n            backServices.getUserInfo().then((result) => {\n                setUserInfo({\n                    ...result.data,\n                    photoURL: user?.photoURL,\n                })\n            })\n            setUserLoading(false)\n        })\n        if (locale === 'es') {\n            setLocale('es')\n        } else {\n            setLocale('en')\n        }\n    })\n    return () => {\n        unsubscribeCallback()\n    }\n}, [])\n\n")))}d.isMDXComponent=!0}}]);